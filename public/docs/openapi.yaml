openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/auth/register:
    post:
      summary: ''
      operationId: postApiAuthRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Auth Managent'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolor
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: bradtke.verna@example.net
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'H*1Vw[R(ot;0t>'
                password_confirm:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: dignissimos
              required:
                - name
                - email
                - password
                - password_confirm
      security: []
  /api/auth/signin:
    post:
      summary: ''
      operationId: postApiAuthSignin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Auth Managent'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: dcarter@example.com
                password:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - email
                - password
      security: []
  /api/candy:
    get:
      summary: 'Display a listing of candies.'
      operationId: displayAListingOfCandies
      description: 'Get a list of candies.'
      parameters:
        -
          in: query
          name: per_page
          description: 'Size per page. Defaults to 15.'
          example: 5
          required: false
          schema:
            type: integer
            description: 'Size per page. Defaults to 15.'
            example: 5
        -
          in: query
          name: page
          description: 'Page to view.'
          example: 8
          required: false
          schema:
            type: integer
            description: 'Page to view.'
            example: 8
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/candy?page=1'
                    last: 'http://localhost/api/candy?page=1'
                    prev: 'http://localhost/api/candy?page=7'
                    next: null
                  meta:
                    current_page: 8
                    from: null
                    last_page: 1
                    links:
                      -
                        url: 'http://localhost/api/candy?page=7'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/candy?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/candy'
                    per_page: 5
                    to: null
                    total: 3
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/candy?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/candy?page=1'
                      prev:
                        type: string
                        example: 'http://localhost/api/candy?page=7'
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 8
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: 'http://localhost/api/candy?page=7'
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/candy?page=1'
                            label: '1'
                            active: false
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: 'http://localhost/api/candy?page=7'
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/candy'
                      per_page:
                        type: integer
                        example: 5
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 3
      tags:
        - 'Candy Managent'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: 'SÃ³ um teste qualquer'
      parameters: []
      responses: {  }
      tags:
        - 'Candy Managent'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                candy_name:
                  type: string
                  description: ''
                  example: corporis
                amount:
                  type: integer
                  description: ''
                  example: 1
              required:
                - candy_name
                - amount
      security: []
  '/api/candy/{id}':
    get:
      summary: 'Display the specified Candy.'
      operationId: displayTheSpecifiedCandy
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    candy: 'Red Velvet'
                    amount: 50
                    created_at: '2023-04-26T13:03:39.000000Z'
                    updated_at: '2023-04-26T13:03:39.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      candy:
                        type: string
                        example: 'Red Velvet'
                      amount:
                        type: integer
                        example: 50
                      created_at:
                        type: string
                        example: '2023-04-26T13:03:39.000000Z'
                      updated_at:
                        type: string
                        example: '2023-04-26T13:03:39.000000Z'
      tags:
        - 'Candy Managent'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Candy Managent'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                candy_name:
                  type: string
                  description: ''
                  example: cumque
                amount:
                  type: integer
                  description: ''
                  example: 10
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Candy Managent'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Candy ID'
        example: 14
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: 'Attempt to authenticate a new session.'
      operationId: attemptToAuthenticateANewSession
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: buckridge.monty@example.org
                password:
                  type: string
                  description: ''
                  example: 'I)NX#8/bum}'
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Destroy an authenticated session.'
      operationId: destroyAnAuthenticatedSession
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/forgot-password:
    post:
      summary: 'Send a reset link to the given user.'
      operationId: sendAResetLinkToTheGivenUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/reset-password:
    post:
      summary: "Reset the user's password."
      operationId: resetTheUsersPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: et
                password:
                  type: string
                  description: ''
                  example: enim
              required:
                - token
                - password
      security: []
  /api/register:
    post:
      summary: 'Create a new registered user.'
      operationId: createANewRegisteredUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/email/verify/{id}/{hash}':
    get:
      summary: "Mark the authenticated user's email address as verified."
      operationId: markTheAuthenticatedUsersEmailAddressAsVerified
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the verify.'
        example: sint
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
  /api/email/verification-notification:
    post:
      summary: 'Send a new email verification notification.'
      operationId: sendANewEmailVerificationNotification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user/confirmed-password-status:
    get:
      summary: 'Get the password confirmation status.'
      operationId: getThePasswordConfirmationStatus
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/confirm-password:
    post:
      summary: "Confirm the user's password."
      operationId: confirmTheUsersPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/ingredient:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Get a list of ingredients.'
      parameters:
        -
          in: query
          name: per_page
          description: 'Size per page. Defaults to 15.'
          example: 2
          required: false
          schema:
            type: integer
            description: 'Size per page. Defaults to 15.'
            example: 2
        -
          in: query
          name: page
          description: 'Page to view.'
          example: 19
          required: false
          schema:
            type: integer
            description: 'Page to view.'
            example: 19
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/ingredient?page=1'
                    last: 'http://localhost/api/ingredient?page=1'
                    prev: 'http://localhost/api/ingredient?page=18'
                    next: null
                  meta:
                    current_page: 19
                    from: null
                    last_page: 1
                    links:
                      -
                        url: 'http://localhost/api/ingredient?page=18'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/ingredient?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/ingredient'
                    per_page: 2
                    to: null
                    total: 1
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/ingredient?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/ingredient?page=1'
                      prev:
                        type: string
                        example: 'http://localhost/api/ingredient?page=18'
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 19
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: 'http://localhost/api/ingredient?page=18'
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/ingredient?page=1'
                            label: '1'
                            active: false
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: 'http://localhost/api/ingredient?page=18'
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/ingredient'
                      per_page:
                        type: integer
                        example: 2
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 1
      tags:
        - 'Ingredient Managent'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Ingredient Managent'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ing_name:
                  type: string
                  description: ''
                  example: ab
                amount:
                  type: string
                  description: ''
                  example: vitae
                cost:
                  type: string
                  description: ''
                  example: quae
              required:
                - ing_name
                - amount
                - cost
      security: []
  '/api/ingredient/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    ingredient: aÃ§ucar
                    amount: 1500
                    cost: 11.78
                    created_at: '2023-05-05T14:31:12.000000Z'
                    updated_at: '2023-05-05T14:45:33.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      ingredient:
                        type: string
                        example: aÃ§ucar
                      amount:
                        type: integer
                        example: 1500
                      cost:
                        type: number
                        example: 11.78
                      created_at:
                        type: string
                        example: '2023-05-05T14:31:12.000000Z'
                      updated_at:
                        type: string
                        example: '2023-05-05T14:45:33.000000Z'
      tags:
        - 'Ingredient Managent'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Ingredient Managent'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ing_name:
                  type: string
                  description: ''
                  example: omnis
                amount:
                  type: string
                  description: ''
                  example: temporibus
                cost:
                  type: string
                  description: ''
                  example: veritatis
              required:
                - ing_name
                - amount
                - cost
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Ingredient Managent'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ingredient.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Auth Managent'
    description: "\nAPIs to manage the Auth resource"
  -
    name: 'Candy Managent'
    description: "\nAPIs to manage the candy resource"
  -
    name: Endpoints
    description: ''
  -
    name: 'Ingredient Managent'
    description: "\nAPIs to manage the Ingredient resource"
